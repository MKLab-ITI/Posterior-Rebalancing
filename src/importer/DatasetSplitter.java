package importer;
import java.util.ArrayList;
import java.util.Enumeration;

import weka.core.Instance;
import weka.core.Instances;

/**
 * <h1>DatasetSplitter</h1>
 * This class is used to directly split {@link weka.core.Instances} datasets into
 * training and test counterparts, according to a specified fraction.
 * @author Krasanakis Emmanouil
 */
class DatasetSplitter {
	private Instances trainingSet;
	private Instances testSet;
	/**
	 * <h1>split</h1>
	 * Splits the given dataset into training and test parts, which are stored inside the object and 
	 * can be retrieved using the {@link #getTraining} and {@link #getTest} functions.<br/>
	 * This procedure generates new safe {@link weka.core.Instance} objects.
	 * @param original the given dataset to split
	 * @param fraction the fraction of instances to include in the training set
	 */
	public void split(Instances original, double fraction) {
		int n = (int)(original.numInstances()*fraction);
		if(n<1)
			n = 1;
		trainingSet = new Instances(original, 0);
		testSet = new Instances(original, 0);
		ArrayList<Instance> candidates = new ArrayList<Instance>();
		@SuppressWarnings("unchecked")
		Enumeration<Instance> instancesTraverse = original.enumerateInstances();
		while(instancesTraverse.hasMoreElements()) 
			candidates.add(instancesTraverse.nextElement());
		while(candidates.size()>n) {
			int instanceId = (int)(Math.random()*candidates.size());
			Instance instance = new Instance(candidates.get(instanceId));
			candidates.remove(instanceId);
			instance.setDataset(testSet);
			testSet.add(instance);
		}
		for(Instance originalInstance : candidates) {
			Instance instance = new Instance(originalInstance);
			instance.setDataset(trainingSet);
			trainingSet.add(instance);
		}
	}
	/**
	 * <h1>getTraining</h1>
	 * @return training {@link weka.core.Instances} generated by the {@link #split} function
	 */
	public Instances getTraining() {
		return trainingSet;
	}
	/**
	 * <h1>getTest</h1>
	 * @return test {@link weka.core.Instances} generated by the {@link #split} function
	 */
	public Instances getTest() {
		return testSet;
	}
}
